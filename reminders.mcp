// MCP file for Reminders functionality
from fastapi import APIRouter, Request
import json
import os

router = APIRouter()
REMINDERS_FILE = "reminders.json"

def load_reminders():
    if not os.path.exists(REMINDERS_FILE):
        return []
    with open(REMINDERS_FILE, "r") as f:
        return json.load(f)

def save_reminders(reminders):
    with open(REMINDERS_FILE, "w") as f:
        json.dump(reminders, f)

@router.get("")
async def list_reminders():
    return load_reminders()

@router.post("")
async def add_reminder(request: Request):
    data = await request.json()
    reminders = load_reminders()
    reminders.append(data)
    save_reminders(reminders)
    return {"status": "added"}

@router.delete("")
async def delete_reminder(request: Request):
    data = await request.json()
    reminders = load_reminders()
    reminders = [r for r in reminders if not (
        r.get("text") == data.get("text") and 
        r.get("date") == data.get("date") and 
        r.get("time") == data.get("time")
    )]
    save_reminders(reminders)
    return {"status": "deleted"}
